{
  "version": 3,
  "sources": [
    {
      "name": "default",
      "kind": "postgres",
      "tables": [
        {
          "table": {
            "name": "ENUM_ROLE",
            "schema": "public"
          },
          "is_enum": true,
          "select_permissions": [
            {
              "role": "user",
              "permission": {
                "columns": [
                  "comment",
                  "value"
                ],
                "filter": {}
              }
            }
          ]
        },
        {
          "table": {
            "name": "app",
            "schema": "public"
          }
        },
        {
          "table": {
            "name": "file",
            "schema": "public"
          },
          "insert_permissions": [
            {
              "role": "user",
              "permission": {
                "check": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                },
                "columns": [
                  "file_id",
                  "name",
                  "signed_url",
                  "type",
                  "user_id"
                ]
              }
            }
          ],
          "select_permissions": [
            {
              "role": "user",
              "permission": {
                "columns": [
                  "file_id",
                  "name",
                  "public",
                  "signed_url",
                  "type",
                  "user_id"
                ],
                "filter": {
                  "_or": [
                    {
                      "user_id": {
                        "_eq": "X-Hasura-User-Id"
                      }
                    },
                    {
                      "public": {
                        "_eq": true
                      }
                    }
                  ]
                }
              }
            }
          ],
          "update_permissions": [
            {
              "role": "user",
              "permission": {
                "columns": [
                  "public",
                  "file_id",
                  "name",
                  "signed_url",
                  "type",
                  "user_id"
                ],
                "filter": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                },
                "check": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                }
              }
            }
          ],
          "delete_permissions": [
            {
              "role": "user",
              "permission": {
                "filter": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                }
              }
            }
          ]
        },
        {
          "table": {
            "name": "public_user",
            "schema": "public"
          },
          "insert_permissions": [
            {
              "role": "user",
              "permission": {
                "check": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                },
                "columns": [
                  "number",
                  "message",
                  "user_id"
                ]
              }
            }
          ],
          "select_permissions": [
            {
              "role": "user",
              "permission": {
                "columns": [
                  "user_id",
                  "message",
                  "number"
                ],
                "filter": {}
              }
            }
          ],
          "update_permissions": [
            {
              "role": "user",
              "permission": {
                "columns": [
                  "number",
                  "message",
                  "user_id"
                ],
                "filter": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                },
                "check": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                }
              }
            }
          ],
          "delete_permissions": [
            {
              "role": "user",
              "permission": {
                "filter": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                }
              }
            }
          ]
        },
        {
          "table": {
            "name": "user",
            "schema": "public"
          },
          "select_permissions": [
            {
              "role": "user",
              "permission": {
                "columns": [
                  "user_id",
                  "user_phone",
                  "role",
                  "created_at",
                  "updated_at"
                ],
                "filter": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                }
              }
            }
          ],
          "update_permissions": [
            {
              "role": "user",
              "permission": {
                "columns": [
                  "created_at",
                  "updated_at",
                  "user_phone"
                ],
                "filter": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                },
                "check": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                }
              }
            }
          ],
          "delete_permissions": [
            {
              "role": "user",
              "permission": {
                "filter": {
                  "user_id": {
                    "_eq": "X-Hasura-User-Id"
                  }
                }
              }
            }
          ],
          "event_triggers": [
            {
              "name": "event_update_user_cascade",
              "definition": {
                "enable_manual": false,
                "insert": {
                  "columns": "*"
                },
                "update": {
                  "columns": "*"
                }
              },
              "retry_conf": {
                "interval_sec": 10,
                "num_retries": 3,
                "timeout_sec": 60
              },
              "webhook": "{{HASURA_MICROSERVICE_URL}}",
              "headers": [
                {
                  "name": "HASURA_EVENT_SECRET",
                  "value_from_env": "HASURA_EVENT_SECRET"
                }
              ],
              "request_transform": {
                "method": "POST",
                "query_params": {},
                "template_engine": "Kriti",
                "url": "{{$base_url}}/event_update_user_cascade/",
                "version": 2
              }
            },
            {
              "name": "event_update_user_role",
              "definition": {
                "enable_manual": false,
                "insert": {
                  "columns": "*"
                },
                "update": {
                  "columns": [
                    "role",
                    "user_id"
                  ]
                }
              },
              "retry_conf": {
                "interval_sec": 30,
                "num_retries": 3,
                "timeout_sec": 60
              },
              "webhook": "{{HASURA_MICROSERVICE_URL}}",
              "headers": [
                {
                  "name": "HASURA_EVENT_SECRET",
                  "value_from_env": "HASURA_EVENT_SECRET"
                }
              ],
              "request_transform": {
                "method": "POST",
                "query_params": {},
                "template_engine": "Kriti",
                "url": "{{$base_url}}/event_update_user_role/",
                "version": 2
              }
            }
          ]
        }
      ],
      "configuration": {
        "connection_info": {
          "database_url": {
            "from_env": "HASURA_GRAPHQL_DATABASE_URL"
          },
          "isolation_level": "read-committed",
          "pool_settings": {
            "connection_lifetime": 600,
            "idle_timeout": 180,
            "max_connections": 50,
            "retries": 1
          },
          "use_prepared_statements": true
        }
      }
    }
  ],
  "actions": [
    {
      "name": "action_mutation_pong",
      "definition": {
        "handler": "{{HASURA_MICROSERVICE_URL}}",
        "output_type": "ActionMutationPongOutput",
        "forward_client_headers": true,
        "headers": [
          {
            "name": "HASURA_EVENT_SECRET",
            "value_from_env": "HASURA_EVENT_SECRET"
          }
        ],
        "arguments": [
          {
            "name": "action_mutation_pong_input",
            "type": "ActionMutationPongInput"
          }
        ],
        "request_transform": {
          "body": {
            "action": "transform",
            "template": "{{$body?.input?.action_mutation_pong_input}}"
          },
          "method": "POST",
          "query_params": {},
          "template_engine": "Kriti",
          "url": "{{$base_url}}/action_mutation_pong/",
          "version": 2
        },
        "type": "mutation",
        "kind": "synchronous"
      },
      "comment": "/action_mutation_pong/",
      "permissions": [
        {
          "role": "user"
        }
      ]
    },
    {
      "name": "action_query_ping",
      "definition": {
        "handler": "{{HASURA_MICROSERVICE_URL}}",
        "output_type": "ActionQueryPingOutput",
        "forward_client_headers": true,
        "headers": [
          {
            "name": "HASURA_EVENT_SECRET",
            "value_from_env": "HASURA_EVENT_SECRET"
          }
        ],
        "arguments": [
          {
            "name": "action_query_ping_input",
            "type": "ActionQueryPingInput"
          }
        ],
        "request_transform": {
          "body": {
            "action": "transform",
            "template": "{{$body?.input?.action_query_ping_input}}"
          },
          "method": "POST",
          "query_params": {},
          "template_engine": "Kriti",
          "url": "{{$base_url}}/action_query_ping/",
          "version": 2
        },
        "type": "query"
      },
      "comment": "/action_query_ping/",
      "permissions": [
        {
          "role": "user"
        }
      ]
    },
    {
      "name": "action_upload_file",
      "definition": {
        "handler": "{{HASURA_MICROSERVICE_URL}}",
        "output_type": "ActionUploadFileOutput",
        "forward_client_headers": true,
        "headers": [
          {
            "name": "HASURA_EVENT_SECRET",
            "value_from_env": "HASURA_EVENT_SECRET"
          }
        ],
        "arguments": [
          {
            "name": "action_upload_file_input",
            "type": "ActionUploadFileInput"
          }
        ],
        "request_transform": {
          "body": {
            "action": "transform",
            "template": "{{$body?.input?.action_upload_file_input}}"
          },
          "method": "POST",
          "query_params": {},
          "template_engine": "Kriti",
          "url": "{{$base_url}}/action_upload_file/",
          "version": 2
        },
        "type": "mutation",
        "kind": "asynchronous"
      },
      "comment": "/action_upload_file/",
      "permissions": [
        {
          "role": "user"
        }
      ]
    }
  ],
  "custom_types": {
    "input_objects": [
      {
        "name": "ActionMutationPongInput",
        "fields": [
          {
            "name": "message",
            "type": "String!"
          },
          {
            "name": "number",
            "type": "Int!"
          }
        ]
      },
      {
        "name": "ActionQueryPingInput",
        "fields": [
          {
            "name": "message",
            "type": "String"
          },
          {
            "name": "number",
            "type": "Int"
          }
        ]
      },
      {
        "name": "ActionUploadFileInput",
        "fields": [
          {
            "name": "file_data",
            "type": "String!"
          },
          {
            "name": "file_name",
            "type": "String!"
          },
          {
            "name": "file_type",
            "type": "String!"
          },
          {
            "name": "public",
            "type": "Boolean!"
          }
        ]
      }
    ],
    "objects": [
      {
        "name": "ActionMutationPongOutput",
        "fields": [
          {
            "name": "data",
            "type": "ActionMutationPongOutputData"
          },
          {
            "name": "nodes",
            "type": "[IdLink]"
          },
          {
            "name": "response_name",
            "type": "String!"
          },
          {
            "name": "response_value",
            "type": "Int!"
          },
          {
            "name": "errors",
            "type": "[Error]"
          }
        ]
      },
      {
        "name": "ActionMutationPongOutputData",
        "fields": [
          {
            "name": "message",
            "type": "String!"
          },
          {
            "name": "number",
            "type": "Int!"
          }
        ]
      },
      {
        "name": "IdLink",
        "fields": [
          {
            "name": "link",
            "type": "String!"
          },
          {
            "name": "table",
            "type": "String!"
          }
        ]
      },
      {
        "name": "Error",
        "fields": [
          {
            "name": "message",
            "type": "String"
          }
        ]
      },
      {
        "name": "ActionQueryPingOutput",
        "fields": [
          {
            "name": "data",
            "type": "ActionQueryPingOutputData"
          },
          {
            "name": "nodes",
            "type": "[IdLink]"
          },
          {
            "name": "response_name",
            "type": "String!"
          },
          {
            "name": "response_value",
            "type": "Int!"
          },
          {
            "name": "errors",
            "type": "[Error]"
          }
        ]
      },
      {
        "name": "ActionQueryPingOutputData",
        "fields": [
          {
            "name": "message",
            "type": "String!"
          },
          {
            "name": "number",
            "type": "Int!"
          }
        ]
      },
      {
        "name": "ActionUploadFileOutputData",
        "fields": [
          {
            "name": "file_name",
            "type": "String!"
          },
          {
            "name": "file_type",
            "type": "String!"
          },
          {
            "name": "file_url",
            "type": "String!"
          },
          {
            "name": "file_id",
            "type": "String!"
          }
        ]
      },
      {
        "name": "ActionUploadFileOutput",
        "fields": [
          {
            "name": "data",
            "type": "ActionUploadFileOutputData"
          },
          {
            "name": "nodes",
            "type": "[IdLink]"
          },
          {
            "name": "response_name",
            "type": "String!"
          },
          {
            "name": "response_value",
            "type": "Int!"
          },
          {
            "name": "errors",
            "type": "[Error]"
          }
        ]
      }
    ]
  },
  "cron_triggers": [
    {
      "name": "cron_update_app_message",
      "webhook": "{{HASURA_MICROSERVICE_URL}}",
      "schedule": "*/5 * * * *",
      "include_in_metadata": true,
      "payload": {
        "trigger": "cron"
      },
      "retry_conf": {
        "num_retries": 3,
        "retry_interval_seconds": 600,
        "timeout_seconds": 600,
        "tolerance_seconds": 21600
      },
      "headers": [
        {
          "name": "HASURA_EVENT_SECRET",
          "value_from_env": "HASURA_EVENT_SECRET"
        }
      ],
      "comment": "",
      "request_transform": {
        "method": "POST",
        "query_params": {},
        "template_engine": "Kriti",
        "url": "{{$base_url}}/cron_update_app_message/",
        "version": 2
      }
    }
  ]
}