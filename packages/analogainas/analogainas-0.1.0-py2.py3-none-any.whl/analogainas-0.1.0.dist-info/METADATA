Metadata-Version: 2.1
Name: analogainas
Version: 0.1.0
Summary: AnalogAINAS: A modular and extensible Analog-aware Neural Architecture Search (NAS) library.
Home-page: https://github.com/IBM/analog-nas
Author: IBM Research
Author-email: aihwkit@us.ibm.com
License: Apache 2.0
Keywords: NAS,analog,torch
Platform: Linux
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Environment :: GPU :: NVIDIA CUDA
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Typing :: Typed
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch (>=1.9)
Requires-Dist: torchvision
Requires-Dist: scipy
Requires-Dist: numpy (>=1.19)
Requires-Dist: xgboost

# analogai-nas
**AnalogAINas** is a modular and flexible framework to facilitate implementation of Analog-aware Neural Architecture Search. It offers high-level classes to define: the search space, the accuracy evaluator, and the search strategy. It leverages [the aihwkit framework](https://github.com/IBM/aihwkit) to apply hardware-aware training with analog non-idealities and noise included. **AnalogAINAS** obtained architectures are more robust during inference on Analog Hardware. We also include two evaluators trained to rank the architectures according to their analog training accuracy. 

## Setup 
While installing the repository, creating a new conda environment is recomended.

```
git clone https://github.com/IBM/analog-nas/
pip install -r requirements.txt 
pip setup.py install 
```

## Usage
To get started, check out ```nas_search_demo.py``` to make sure that the installation went well. 

This python script describes how to use the package. 

