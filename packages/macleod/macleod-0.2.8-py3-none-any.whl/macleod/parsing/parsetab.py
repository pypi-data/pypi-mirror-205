
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIFFleftIFAND CLCOMMENT COMMENT EXISTS FORALL IF IFF IMPORT LPAREN NAME_STRING NONLOGICAL NOT OR QUOTED_STRING RESTRICT RPAREN SET START TITLE URI\n    starter : COMMENT ontology\n    starter : ontology\n    \n    ontology : LPAREN START URI statement RPAREN\n    ontology : LPAREN START statement RPAREN\n    ontology : statement\n    \n    title : LPAREN TITLE NONLOGICAL RPAREN\n    title : LPAREN TITLE URI RPAREN\n    \n    ontology : LPAREN START error\n    ontology : LPAREN START URI error\n    \n    restriction : LPAREN RESTRICT NONLOGICAL LPAREN START statement RPAREN RPAREN\n    \n    module : LPAREN TITLE NONLOGICAL LPAREN START statement RPAREN RPAREN\n    \n    statement : axiom statement\n    statement : import statement\n    statement : comment statement\n    statement : module statement\n    statement : const statement\n    statement : title statement\n    statement : restriction statement\n    statement : axiom\n    statement : import\n    statement : comment\n    statement : module\n    statement : const\n    statement : restriction\n    \n    const : LPAREN SET LPAREN NONLOGICAL NAME_STRING RPAREN RPAREN\n    inline : LPAREN CLCOMMENT QUOTED_STRING\n    comment : LPAREN CLCOMMENT QUOTED_STRING RPAREN\n    \n    comment : LPAREN CLCOMMENT error RPAREN\n    \n    import : LPAREN IMPORT URI RPAREN\n    \n    import : LPAREN IMPORT error\n    \n    axiom : commented_axiom\n          | negation\n          | universal\n          | existential\n          | conjunction\n          | disjunction\n          | implication\n          | biconditional\n          | predicate\n          | commented_predicate\n    \n    base_axiom : negation \n        | universal\n        | existential\n        | conjunction\n        | disjunction\n        | implication\n        | biconditional\n        | predicate\n    \n    commented_axiom : inline base_axiom RPAREN\n    \n    negation : LPAREN NOT axiom RPAREN\n    \n    conjunction : LPAREN AND axiom_list RPAREN\n    \n    conjunction : LPAREN AND error\n    \n    disjunction : LPAREN OR axiom_list RPAREN\n    \n    disjunction : LPAREN OR error\n    \n    axiom_list : axiom axiom_list\n    axiom_list : axiom\n    \n    implication : LPAREN IF axiom axiom RPAREN\n    \n    implication : LPAREN IF error\n    implication : LPAREN IF axiom error\n    \n    biconditional : LPAREN IFF axiom axiom RPAREN\n    \n    biconditional : LPAREN IFF error\n    biconditional : LPAREN IFF axiom error\n    \n    existential : LPAREN EXISTS LPAREN nonlogicals RPAREN axiom RPAREN\n    \n    existential : LPAREN EXISTS LPAREN error\n    existential : LPAREN EXISTS LPAREN nonlogicals RPAREN error\n    \n    universal : LPAREN FORALL LPAREN nonlogicals RPAREN axiom RPAREN\n    \n    universal : LPAREN FORALL LPAREN error\n    universal : LPAREN FORALL LPAREN nonlogicals RPAREN error\n    \n    commented_predicate : LPAREN LPAREN CLCOMMENT QUOTED_STRING NONLOGICAL RPAREN parameter RPAREN\n    commented_predicate : LPAREN LPAREN CLCOMMENT QUOTED_STRING NAME_STRING RPAREN parameter RPAREN\n    \n    predicate : LPAREN NONLOGICAL parameter RPAREN\n    predicate : LPAREN NAME_STRING parameter RPAREN\n    predicate : LPAREN SET parameter RPAREN\n    predicate : LPAREN SET LPAREN NONLOGICAL NONLOGICAL RPAREN RPAREN\n    \n    predicate : LPAREN NONLOGICAL error RPAREN\n    \n    parameter : function parameter\n    parameter : nonlogicals parameter\n    parameter : function\n    parameter : nonlogicals\n    \n    function : LPAREN NONLOGICAL parameter RPAREN\n    \n    function : LPAREN NONLOGICAL error RPAREN\n    \n    nonlogicals : NONLOGICAL nonlogicals\n    nonlogicals : NONLOGICAL\n    '
    
_lr_action_items = {'COMMENT':([0,],[2,]),'LPAREN':([0,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,30,31,32,34,35,36,37,38,39,40,42,60,64,65,67,70,73,74,78,79,84,85,87,88,89,90,91,92,93,98,99,100,102,103,104,105,106,107,110,111,112,115,117,119,120,122,124,126,131,134,136,137,138,139,140,141,142,143,144,146,147,152,154,158,159,161,162,163,164,165,166,],[4,4,25,42,42,42,42,42,42,42,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,58,42,69,75,69,79,81,82,79,79,79,79,25,42,-30,-26,101,-83,69,69,113,25,-52,79,-54,79,-58,79,-61,-49,127,-29,-27,-28,-6,-7,69,-82,-71,-75,69,-73,-72,-50,-67,-64,-51,-53,-59,-62,42,-83,42,-26,79,79,-57,-60,69,69,69,-80,-81,-68,-65,-74,-25,-66,-63,-69,-70,-11,-10,]),'$end':([1,3,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,24,41,43,44,45,46,47,48,62,64,84,87,89,91,92,96,97,98,99,100,106,107,111,112,115,117,119,120,122,124,126,130,140,141,152,154,158,159,161,162,163,164,165,166,],[0,-2,-5,-19,-20,-21,-22,-23,-24,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-1,-12,-13,-14,-15,-16,-17,-18,-8,-30,-52,-54,-58,-61,-49,-9,-4,-29,-27,-28,-71,-75,-73,-72,-50,-67,-64,-51,-53,-59,-62,-3,-57,-60,-68,-65,-74,-25,-66,-63,-69,-70,-11,-10,]),'START':([4,101,113,],[26,131,136,]),'IMPORT':([4,42,],[27,27,]),'CLCOMMENT':([4,25,42,79,],[28,59,28,114,]),'TITLE':([4,42,],[29,29,]),'SET':([4,42,58,79,],[31,31,93,93,]),'RESTRICT':([4,42,],[33,33,]),'NOT':([4,42,58,79,],[34,34,34,34,]),'FORALL':([4,42,58,79,],[35,35,35,35,]),'EXISTS':([4,42,58,79,],[36,36,36,36,]),'AND':([4,42,58,79,],[37,37,37,37,]),'OR':([4,42,58,79,],[38,38,38,38,]),'IF':([4,42,58,79,],[39,39,39,39,]),'IFF':([4,42,58,79,],[40,40,40,40,]),'NONLOGICAL':([4,29,30,31,32,33,42,58,69,70,73,74,75,79,81,82,93,94,104,105,110,127,134,142,143,144,146,147,],[30,67,70,70,70,78,30,30,104,70,70,70,110,30,70,70,70,128,70,-82,134,142,70,134,70,70,-80,-81,]),'NAME_STRING':([4,42,58,79,94,110,],[32,32,32,32,129,135,]),'RPAREN':([6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,63,64,65,66,67,68,70,71,72,73,74,76,77,80,83,84,85,86,87,89,91,92,95,98,99,100,105,106,107,108,109,111,112,115,116,117,118,119,120,121,122,123,124,125,126,128,129,132,133,134,135,140,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,],[-19,-20,-21,-22,-23,-24,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-12,-13,-14,-15,-16,-17,-18,92,-41,-42,-43,-44,-45,-46,-47,-48,97,98,-30,99,100,102,103,-83,106,107,-78,-79,111,112,115,120,-52,-56,122,-54,-58,-61,-49,130,-29,-27,-28,-82,-71,-75,-76,-77,-73,-72,-50,138,-67,139,-64,-51,-55,-53,140,-59,141,-62,143,144,146,147,148,149,-57,-60,157,-80,-81,158,159,160,161,-68,162,-65,163,164,165,-74,-25,166,-66,-63,-69,-70,-11,-10,]),'error':([13,14,15,16,17,18,19,20,21,22,26,27,28,30,37,38,39,40,60,81,82,84,87,88,89,90,91,92,104,106,107,110,111,112,115,117,119,120,122,124,126,138,139,140,141,142,152,154,158,161,162,163,164,],[-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,62,64,66,72,84,87,89,91,96,117,119,-52,-54,124,-58,126,-61,-49,133,-71,-75,133,-73,-72,-50,-67,-64,-51,-53,-59,-62,152,154,-57,-60,133,-68,-65,-74,-66,-63,-69,-70,]),'URI':([26,27,29,],[60,63,68,]),'QUOTED_STRING':([28,59,114,],[65,94,137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'starter':([0,],[1,]),'ontology':([0,2,],[3,24,]),'statement':([0,2,6,7,8,9,10,11,12,26,60,131,136,],[5,5,41,43,44,45,46,47,48,61,95,145,150,]),'axiom':([0,2,6,7,8,9,10,11,12,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[6,6,6,6,6,6,6,6,6,6,80,85,85,88,90,6,85,123,125,6,6,151,153,]),'import':([0,2,6,7,8,9,10,11,12,26,60,131,136,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'comment':([0,2,6,7,8,9,10,11,12,26,60,131,136,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'module':([0,2,6,7,8,9,10,11,12,26,60,131,136,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'const':([0,2,6,7,8,9,10,11,12,26,60,131,136,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'title':([0,2,6,7,8,9,10,11,12,26,60,131,136,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'restriction':([0,2,6,7,8,9,10,11,12,26,60,131,136,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'commented_axiom':([0,2,6,7,8,9,10,11,12,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'negation':([0,2,6,7,8,9,10,11,12,23,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[14,14,14,14,14,14,14,14,14,50,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'universal':([0,2,6,7,8,9,10,11,12,23,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[15,15,15,15,15,15,15,15,15,51,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'existential':([0,2,6,7,8,9,10,11,12,23,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[16,16,16,16,16,16,16,16,16,52,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'conjunction':([0,2,6,7,8,9,10,11,12,23,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[17,17,17,17,17,17,17,17,17,53,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'disjunction':([0,2,6,7,8,9,10,11,12,23,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[18,18,18,18,18,18,18,18,18,54,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'implication':([0,2,6,7,8,9,10,11,12,23,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[19,19,19,19,19,19,19,19,19,55,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'biconditional':([0,2,6,7,8,9,10,11,12,23,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[20,20,20,20,20,20,20,20,20,56,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'predicate':([0,2,6,7,8,9,10,11,12,23,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[21,21,21,21,21,21,21,21,21,57,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'commented_predicate':([0,2,6,7,8,9,10,11,12,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'inline':([0,2,6,7,8,9,10,11,12,26,34,37,38,39,40,60,85,88,90,131,136,138,139,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'base_axiom':([23,],[49,]),'parameter':([30,31,32,73,74,93,104,110,142,143,144,],[71,76,77,108,109,76,132,132,132,155,156,]),'function':([30,31,32,73,74,93,104,110,142,143,144,],[73,73,73,73,73,73,73,73,73,73,73,]),'nonlogicals':([30,31,32,70,73,74,81,82,93,104,110,134,142,143,144,],[74,74,74,105,74,74,116,118,74,74,74,105,74,74,74,]),'axiom_list':([37,38,85,],[83,86,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> starter","S'",1,None,None,None),
  ('starter -> COMMENT ontology','starter',2,'p_starter','parser.py',99),
  ('starter -> ontology','starter',1,'p_starter','parser.py',100),
  ('ontology -> LPAREN START URI statement RPAREN','ontology',5,'p_ontology','parser.py',114),
  ('ontology -> LPAREN START statement RPAREN','ontology',4,'p_ontology','parser.py',115),
  ('ontology -> statement','ontology',1,'p_ontology','parser.py',116),
  ('title -> LPAREN TITLE NONLOGICAL RPAREN','title',4,'p_title','parser.py',131),
  ('title -> LPAREN TITLE URI RPAREN','title',4,'p_title','parser.py',132),
  ('ontology -> LPAREN START error','ontology',3,'p_ontology_error','parser.py',139),
  ('ontology -> LPAREN START URI error','ontology',4,'p_ontology_error','parser.py',140),
  ('restriction -> LPAREN RESTRICT NONLOGICAL LPAREN START statement RPAREN RPAREN','restriction',8,'p_restriction','parser.py',150),
  ('module -> LPAREN TITLE NONLOGICAL LPAREN START statement RPAREN RPAREN','module',8,'p_module','parser.py',157),
  ('statement -> axiom statement','statement',2,'p_statement','parser.py',164),
  ('statement -> import statement','statement',2,'p_statement','parser.py',165),
  ('statement -> comment statement','statement',2,'p_statement','parser.py',166),
  ('statement -> module statement','statement',2,'p_statement','parser.py',167),
  ('statement -> const statement','statement',2,'p_statement','parser.py',168),
  ('statement -> title statement','statement',2,'p_statement','parser.py',169),
  ('statement -> restriction statement','statement',2,'p_statement','parser.py',170),
  ('statement -> axiom','statement',1,'p_statement','parser.py',171),
  ('statement -> import','statement',1,'p_statement','parser.py',172),
  ('statement -> comment','statement',1,'p_statement','parser.py',173),
  ('statement -> module','statement',1,'p_statement','parser.py',174),
  ('statement -> const','statement',1,'p_statement','parser.py',175),
  ('statement -> restriction','statement',1,'p_statement','parser.py',176),
  ('const -> LPAREN SET LPAREN NONLOGICAL NAME_STRING RPAREN RPAREN','const',7,'p_const','parser.py',197),
  ('inline -> LPAREN CLCOMMENT QUOTED_STRING','inline',3,'p_inline','parser.py',202),
  ('comment -> LPAREN CLCOMMENT QUOTED_STRING RPAREN','comment',4,'p_comment','parser.py',207),
  ('comment -> LPAREN CLCOMMENT error RPAREN','comment',4,'p_comment_error','parser.py',214),
  ('import -> LPAREN IMPORT URI RPAREN','import',4,'p_import','parser.py',224),
  ('import -> LPAREN IMPORT error','import',3,'p_import_error','parser.py',231),
  ('axiom -> commented_axiom','axiom',1,'p_axiom','parser.py',238),
  ('axiom -> negation','axiom',1,'p_axiom','parser.py',239),
  ('axiom -> universal','axiom',1,'p_axiom','parser.py',240),
  ('axiom -> existential','axiom',1,'p_axiom','parser.py',241),
  ('axiom -> conjunction','axiom',1,'p_axiom','parser.py',242),
  ('axiom -> disjunction','axiom',1,'p_axiom','parser.py',243),
  ('axiom -> implication','axiom',1,'p_axiom','parser.py',244),
  ('axiom -> biconditional','axiom',1,'p_axiom','parser.py',245),
  ('axiom -> predicate','axiom',1,'p_axiom','parser.py',246),
  ('axiom -> commented_predicate','axiom',1,'p_axiom','parser.py',247),
  ('base_axiom -> negation','base_axiom',1,'p_base_axiom','parser.py',254),
  ('base_axiom -> universal','base_axiom',1,'p_base_axiom','parser.py',255),
  ('base_axiom -> existential','base_axiom',1,'p_base_axiom','parser.py',256),
  ('base_axiom -> conjunction','base_axiom',1,'p_base_axiom','parser.py',257),
  ('base_axiom -> disjunction','base_axiom',1,'p_base_axiom','parser.py',258),
  ('base_axiom -> implication','base_axiom',1,'p_base_axiom','parser.py',259),
  ('base_axiom -> biconditional','base_axiom',1,'p_base_axiom','parser.py',260),
  ('base_axiom -> predicate','base_axiom',1,'p_base_axiom','parser.py',261),
  ('commented_axiom -> inline base_axiom RPAREN','commented_axiom',3,'p_commented_axiom','parser.py',268),
  ('negation -> LPAREN NOT axiom RPAREN','negation',4,'p_negation','parser.py',274),
  ('conjunction -> LPAREN AND axiom_list RPAREN','conjunction',4,'p_conjunction','parser.py',282),
  ('conjunction -> LPAREN AND error','conjunction',3,'p_conjunction_error','parser.py',289),
  ('disjunction -> LPAREN OR axiom_list RPAREN','disjunction',4,'p_disjunction','parser.py',296),
  ('disjunction -> LPAREN OR error','disjunction',3,'p_disjunction_error','parser.py',303),
  ('axiom_list -> axiom axiom_list','axiom_list',2,'p_axiom_list','parser.py',310),
  ('axiom_list -> axiom','axiom_list',1,'p_axiom_list','parser.py',311),
  ('implication -> LPAREN IF axiom axiom RPAREN','implication',5,'p_implication','parser.py',332),
  ('implication -> LPAREN IF error','implication',3,'p_implication_error','parser.py',342),
  ('implication -> LPAREN IF axiom error','implication',4,'p_implication_error','parser.py',343),
  ('biconditional -> LPAREN IFF axiom axiom RPAREN','biconditional',5,'p_biconditional','parser.py',354),
  ('biconditional -> LPAREN IFF error','biconditional',3,'p_biconditional_error','parser.py',376),
  ('biconditional -> LPAREN IFF axiom error','biconditional',4,'p_biconditional_error','parser.py',377),
  ('existential -> LPAREN EXISTS LPAREN nonlogicals RPAREN axiom RPAREN','existential',7,'p_existential','parser.py',388),
  ('existential -> LPAREN EXISTS LPAREN error','existential',4,'p_existential_error','parser.py',395),
  ('existential -> LPAREN EXISTS LPAREN nonlogicals RPAREN error','existential',6,'p_existential_error','parser.py',396),
  ('universal -> LPAREN FORALL LPAREN nonlogicals RPAREN axiom RPAREN','universal',7,'p_universal','parser.py',407),
  ('universal -> LPAREN FORALL LPAREN error','universal',4,'p_universal_error','parser.py',424),
  ('universal -> LPAREN FORALL LPAREN nonlogicals RPAREN error','universal',6,'p_universal_error','parser.py',425),
  ('commented_predicate -> LPAREN LPAREN CLCOMMENT QUOTED_STRING NONLOGICAL RPAREN parameter RPAREN','commented_predicate',8,'p_commented_predicate','parser.py',436),
  ('commented_predicate -> LPAREN LPAREN CLCOMMENT QUOTED_STRING NAME_STRING RPAREN parameter RPAREN','commented_predicate',8,'p_commented_predicate','parser.py',437),
  ('predicate -> LPAREN NONLOGICAL parameter RPAREN','predicate',4,'p_predicate','parser.py',443),
  ('predicate -> LPAREN NAME_STRING parameter RPAREN','predicate',4,'p_predicate','parser.py',444),
  ('predicate -> LPAREN SET parameter RPAREN','predicate',4,'p_predicate','parser.py',445),
  ('predicate -> LPAREN SET LPAREN NONLOGICAL NONLOGICAL RPAREN RPAREN','predicate',7,'p_predicate','parser.py',446),
  ('predicate -> LPAREN NONLOGICAL error RPAREN','predicate',4,'p_predicate_error','parser.py',455),
  ('parameter -> function parameter','parameter',2,'p_parameter','parser.py',463),
  ('parameter -> nonlogicals parameter','parameter',2,'p_parameter','parser.py',464),
  ('parameter -> function','parameter',1,'p_parameter','parser.py',465),
  ('parameter -> nonlogicals','parameter',1,'p_parameter','parser.py',466),
  ('function -> LPAREN NONLOGICAL parameter RPAREN','function',4,'p_function','parser.py',496),
  ('function -> LPAREN NONLOGICAL error RPAREN','function',4,'p_function_error','parser.py',504),
  ('nonlogicals -> NONLOGICAL nonlogicals','nonlogicals',2,'p_nonlogicals','parser.py',512),
  ('nonlogicals -> NONLOGICAL','nonlogicals',1,'p_nonlogicals','parser.py',513),
]
