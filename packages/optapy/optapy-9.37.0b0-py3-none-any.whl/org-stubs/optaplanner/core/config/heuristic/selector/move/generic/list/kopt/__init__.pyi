
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.util.function
import org.optaplanner.core.config.heuristic.selector.move
import typing



class KOptListMoveSelectorConfig(org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig['KOptListMoveSelectorConfig']):
    XML_ELEMENT_NAME: typing.ClassVar[str] = ...
    def __init__(self): ...
    def copyConfig(self) -> 'KOptListMoveSelectorConfig': ...
    def getMaximumK(self) -> int: ...
    def getMinimumK(self) -> int: ...
    def inherit(self, kOptListMoveSelectorConfig: 'KOptListMoveSelectorConfig') -> 'KOptListMoveSelectorConfig': ...
    def setMaximumK(self, integer: int) -> None: ...
    def setMinimumK(self, integer: int) -> None: ...
    def toString(self) -> str: ...
    def visitReferencedClasses(self, consumer: typing.Union[java.util.function.Consumer[typing.Type[typing.Any]], typing.Callable[[typing.Type[typing.Any]], None]]) -> None: ...
    def withMaximumK(self, integer: int) -> 'KOptListMoveSelectorConfig': ...
    def withMinimumK(self, integer: int) -> 'KOptListMoveSelectorConfig': ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.optaplanner.core.config.heuristic.selector.move.generic.list.kopt")``.

    KOptListMoveSelectorConfig: typing.Type[KOptListMoveSelectorConfig]
