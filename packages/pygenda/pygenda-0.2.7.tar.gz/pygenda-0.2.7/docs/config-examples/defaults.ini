# Sample pygenda.ini file listing default values
# Should be saved as [config_dir]/pygenda/pygenda.ini
# (On Linux, [config_dir] is probably ~/.config)

[calendar]
# ics_file = filename (ics format iCalendar file)
#       Default: [config_dir]/pygenda/pygenda.ics

# caldav_server = string (url, e.g. http://localhost:5232/ for Radicale server)
# caldav_username = string
# caldav_password = string
# caldav_calendar = string
#       Defaults: all None (so ics file is used)
#       Note: Using a calDAV server adds a dependency to pygenda: caldav.


[global]
# 24hr = Boolean
#       Default: False (use 12-hour clock for display and input dialogs)

# hide_titlebar_when_maximized = Boolean
#       Default: False

# language = language string (e.g. en_GB, fr_FR)
#       Default: Use computer locale

# date_sep = string
#       Default: Use computer locale

# date_ord = string
#       Indicates order of date elements (YMD, MDY, DMY)
#       Default: Use computer locale

# time_sep = string
#       Default: Use computer locale

# date_fmt_text = string
#       Formatting string for date in text format, should include year.
#       Example, typical US format: %A %B %-d, %Y -> Monday December 31, 2001
#       Default: Use computer locale

# date_fmt_text_noyear = string
#       Formatting string for date in text format, without year.
#       Used in Year View to display cursor date.
#       Default: '' - indicates it should be constructed from date_fmt_text.

# date_fmt_textabb' = string
#       Formatting string for date in abbreviated text format, including year.
#       Example, typical US format: %a %b %-d, %Y -> Mon Dec 31, 2001
#       Default: '' - indicates it should be constructed from date_fmt_text.

# date_fmt_textabb_noyear = string
#       Formatting string for date in abbreviated text format, without year.
#       Default: '' - indicates it should be constructed from date_fmt_textabb.

# start_week_day = int (0..6)
#       Default: 0 (Monday)

# tab_elts_datetime = Boolean
#       This indicates if pressing tab moves between elements in
#       date/time entry widgets.
#       Default: False

# plus_minus_zoom = Boolean
#       If True, pressing plus or minus keys (without ctrl) will zoom
#       (ctrl with plus/minus keys will always zoom).
#       Default: True


[startup]
# maximize = Boolean
#       Default: False

# fullscreen = Boolean
#       Default: False

# view = string
#       Default: week

# softbutton_display = string
#       Controls display of the softbutton bar (New Entry, View, etc.)
#       'left' => place on left; 'hide' => don't display; else => right
#       Default: '' (=> right)


[new_event]
# show_alarm_warning = bool
#       Whether to show the annoying warning about Pygenda not sounding
#       or activating alarms. Make sure you understand the warning
#       before disabling it.
#       Default: True

# timed_default_alarm_before = string in format '1h2m3s'
#       When you add an alarm to a timed event, this gives the default
#       time *before* event that alarm activates.
#       Default: 15m

# default_alarm_emailaddr = string
#       When user creates an alarm with Action 'Email', use this value
#       as the email address. If this is None, then (for the moment)
#       new email alarms can't be set.
#       Default: None


[week_view]
# pageleft_datepos = 'left' or 'right'
#       Default: 'left'

# pageright_datepos = 'left' or 'right'
#       Default: 'right'

# show_ongoing_event = 'every_day' or 'first_day'
#       Default: 'first_day'
#       Whether ongoing events should be shown only on their start day
#       or on every day that they span.
#       Note: WORK IN PROGRESS! Currently only works within starting week.

# show_event_location = 'always' or 'never'
#       Default: 'always'
#       The plan is to have further options in the future, e.g.
#       'first-day' => only show on the first day of multi-day event,
#       'start-of-week' => on first day and also on first day of week.

# zoom_levels = integer>0
#       Default: 5
#       The number of zoom levels in Week View. The font sizes for
#       each zoom level are set using CSS - see pygenda/css/pygenda.css
#       or gemini.css in this directory for examples.

# default_zoom = integer>=0 and <zoom_levels
#       Default: 1
#       The Week View zoom level when Pygenda is started.


[year_view]
# show_event_location = 'always' or 'never'
#       Default: 'always'
#       The plan is to have further options in the future, e.g.
#       'first-day' => only show on the first day of multi-day event.

# zoom_levels = integer>0
#       Default: 5
#       The number of zoom levels in Year View.
#       (See zoom_levels for Week View above.)

# default_zoom = integer>=0 and <zoom_levels
#       Default: 2
#       The Year View zoom level when Pygenda is started.


[todo_view]
# list0_title = string
#       Default: 'To-do' (or localized equivalent)
#       The displayed name of the to-do list.

# listN_title = string (where N is an integer>0)
#       Default: undefined for N>0 (so there is only one to-do list)
#       These also allow the user to set the number of to-do lists:
#       keep adding titles until you have enough.
#       NB: to set width of lists, try CSS: .todoview_list {min-width:x}

# listN_filter = string (where N is an integer>=0)
#       Default: undefined for N>=0
#       These are used to filter to-do items according to categories.
#       Typically a filter will be the name of a possible category.
#       Undefined (the default) means that all to-do items are shown
#       (so the default behaviour is for a to-do list to show all items).
#       A special value 'UNCATEGORIZED' will show only to-do items with
#       no categories.

# zoom_levels = integer>0
#       Default: 5
#       The number of zoom levels in Todo View.
#       (See zoom_levels for Week View above.)

# default_zoom = integer>=0 and <zoom_levels
#       Default: 2
#       The Todo View zoom level when Pygenda is started.
