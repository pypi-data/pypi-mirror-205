{"version":3,"file":"lib_index_js.745b7b07e91b136d36b8.js","mappings":"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","sources":["webpack://jupyterlab-celltagsclasses/./src/index.ts"],"sourcesContent":["/*\n * for attaching keybindings later on, see\n * https://towardsdatascience.com/how-to-customize-jupyterlab-keyboard-shortcuts-72321f73753d\n */\n\n/* eslint-disable prettier/prettier */\n\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n} from '@jupyterlab/application'\n\nimport {\n  INotebookTracker,\n} from '@jupyterlab/notebook'\n\nimport {\n  ICellModel,\n  Cell,\n} from '@jupyterlab/cells'\n\n\n\n/**\n * Initialization data for the jupyterlab-celltagsclasses extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab-celltagsclasses:plugin',\n  autoStart: true,\n  requires: [INotebookTracker],\n  activate: (app: JupyterFrontEnd, notebookTracker: INotebookTracker) => {\n    console.log('extension jupyterlab-celltagsclasses is activating')\n\n    const class_for_tag = (tag: string) => `cell-tag-${tag}`\n\n    notebookTracker.widgetAdded.connect((_, panel) => {\n        const notebookModel = panel.content.model\n        if (notebookModel === null) {\n          return\n        }\n\n        notebookModel.cells.changed.connect((cellList, change) => {\n          if (change.type !== 'add') {\n            return\n          }\n          change.newValues.forEach((cellModel) => {\n\n            // compute widgets attached to cellModel\n            const cellWidgets = notebookTracker.currentWidget?.content.widgets.filter(\n              (cell: Cell, index: number) => (cell.model.id === cellModel.id)\n            )\n            if ((cellWidgets === undefined) || (cellWidgets?.length === 0)) {\n              console.warn('could not find cell widget for cell model', cellModel)\n              return\n            }\n            console.debug(`found ${cellWidgets?.length} cell widgets`, cellWidgets[0])\n\n            // add classes for pre-existing tags\n            cellModel.getMetadata('tags')?.forEach(\n              (tag: string) => cellWidgets?.forEach(cellWidget => {\n                console.debug(`adding initial class for tag ${class_for_tag(tag)}`)\n                cellWidget.addClass(class_for_tag(tag))\n              }))\n\n            // react to changes in tags\n            cellModel.metadataChanged.connect((sender: ICellModel, change) => {\n              console.debug('metadata changed', sender, change)\n              if (change.key !== 'tags') {\n                // console.debug(\"ignoring non-tags metadata change\")\n                return\n              }\n              // does not seem useful to recompute this\n              // const cellWidgets = notebookTracker.currentWidget?.content.widgets.filter(\n              //   (cell: Cell, index: number) => (cell.model.id === cellModel.id)\n              // )\n              if (change.type === 'change') {\n                console.debug('change', change, change.newValue)\n                // compute difference between old and new tags\n                const oldTags = change.oldValue as string[]\n                const newTags = change.newValue as string[]\n                const addedTags = newTags.filter((tag) => !oldTags.includes(tag))\n                const removedTags = oldTags.filter((tag) => !newTags.includes(tag))\n                console.log('addedTags', addedTags)\n                console.log('removedTags', removedTags)\n                cellWidgets.forEach(cellWidget => {\n                  addedTags.forEach(tag => {\n                    console.debug(`adding class for tag ${class_for_tag(tag)}`)\n                    cellWidget.addClass(class_for_tag(tag))\n                  })\n                  removedTags.forEach(tag => {\n                    console.debug(`removing class for tag ${class_for_tag(tag)}`)\n                    cellWidget.removeClass(class_for_tag(tag))\n                  })\n                })\n              } else if (change.type === 'add') {\n                console.log('add', change, change.newValue)\n                cellWidgets.forEach((cellWidget) => {\n                  for (const tag of change.newValue) {\n                    console.debug(`adding class for tag ${class_for_tag(tag)}`)\n                    cellWidget.addClass(class_for_tag(tag))\n                  }\n                })\n              } else if (change.type === 'remove') {\n                console.log('remove', change, change.newValue)\n                cellWidgets.forEach((cellWidget) => {\n                  for (const tag of change.newValue) {\n                    console.debug(`removing class for tag ${class_for_tag(tag)}`)\n                    cellWidget.removeClass(class_for_tag(tag))\n                  }\n                })\n              }\n            })\n          })\n        })\n      })\n    }\n  }\n\nexport default plugin\n"],"names":[],"sourceRoot":""}