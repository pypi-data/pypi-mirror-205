# coding: utf-8

"""
    RIME Rest API

    API methods for RIME. Must be authenticated with `rime-api-key` header.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CreateFirewallRequestScheduledCTParameters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'eval_data_location': 'FirewallDataLocation',
        'eval_pred_location': 'FirewallDataLocation',
        'rolling_window': 'str'
    }

    attribute_map = {
        'eval_data_location': 'evalDataLocation',
        'eval_pred_location': 'evalPredLocation',
        'rolling_window': 'rollingWindow'
    }

    def __init__(self, eval_data_location=None, eval_pred_location=None, rolling_window=None):  # noqa: E501
        """CreateFirewallRequestScheduledCTParameters - a model defined in Swagger"""  # noqa: E501
        self._eval_data_location = None
        self._eval_pred_location = None
        self._rolling_window = None
        self.discriminator = None
        if eval_data_location is not None:
            self.eval_data_location = eval_data_location
        if eval_pred_location is not None:
            self.eval_pred_location = eval_pred_location
        if rolling_window is not None:
            self.rolling_window = rolling_window

    @property
    def eval_data_location(self):
        """Gets the eval_data_location of this CreateFirewallRequestScheduledCTParameters.  # noqa: E501


        :return: The eval_data_location of this CreateFirewallRequestScheduledCTParameters.  # noqa: E501
        :rtype: FirewallDataLocation
        """
        return self._eval_data_location

    @eval_data_location.setter
    def eval_data_location(self, eval_data_location):
        """Sets the eval_data_location of this CreateFirewallRequestScheduledCTParameters.


        :param eval_data_location: The eval_data_location of this CreateFirewallRequestScheduledCTParameters.  # noqa: E501
        :type: FirewallDataLocation
        """

        self._eval_data_location = eval_data_location

    @property
    def eval_pred_location(self):
        """Gets the eval_pred_location of this CreateFirewallRequestScheduledCTParameters.  # noqa: E501


        :return: The eval_pred_location of this CreateFirewallRequestScheduledCTParameters.  # noqa: E501
        :rtype: FirewallDataLocation
        """
        return self._eval_pred_location

    @eval_pred_location.setter
    def eval_pred_location(self, eval_pred_location):
        """Sets the eval_pred_location of this CreateFirewallRequestScheduledCTParameters.


        :param eval_pred_location: The eval_pred_location of this CreateFirewallRequestScheduledCTParameters.  # noqa: E501
        :type: FirewallDataLocation
        """

        self._eval_pred_location = eval_pred_location

    @property
    def rolling_window(self):
        """Gets the rolling_window of this CreateFirewallRequestScheduledCTParameters.  # noqa: E501

        The reference set updates every time a scheduled CT runs, when the rolling window for that scheduled CT run is not empty.  # noqa: E501

        :return: The rolling_window of this CreateFirewallRequestScheduledCTParameters.  # noqa: E501
        :rtype: str
        """
        return self._rolling_window

    @rolling_window.setter
    def rolling_window(self, rolling_window):
        """Sets the rolling_window of this CreateFirewallRequestScheduledCTParameters.

        The reference set updates every time a scheduled CT runs, when the rolling window for that scheduled CT run is not empty.  # noqa: E501

        :param rolling_window: The rolling_window of this CreateFirewallRequestScheduledCTParameters.  # noqa: E501
        :type: str
        """

        self._rolling_window = rolling_window

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateFirewallRequestScheduledCTParameters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateFirewallRequestScheduledCTParameters):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
