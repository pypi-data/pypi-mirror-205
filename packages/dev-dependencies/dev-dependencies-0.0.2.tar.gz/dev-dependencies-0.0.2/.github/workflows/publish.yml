name: Publish Release
run-name: ${{ github.actor }} has created a new release - build and publish it

# Run on creation of a new release
on:
  release:
    types: [published]

jobs:
  pypi:
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Important to check out not just the sha, but the current tag
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          cache: pipenv
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install dependencies
        run: pipenv install --dev

      # Go ahead and let's run all of the checks first        
      - name: Linting
        run: pipenv run ruff check .
      - name: Formatting
        run: pipenv run black --check .
      - name: Type checking
        run: pipenv run mypy devdeps tests

      - name: Tests
        run: |
          pipenv run pytest --verbose --emoji --md report.md
          cat report.md >> $GITHUB_STEP_SUMMARY
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: |
            junit/test-results.xml
            htmlcov/*
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      # Finally, build and publish the package to pypi
      - name: Build package
        run: pipenv run python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
