Metadata-Version: 2.1
Name: mdup
Version: 0.1.1
Summary: Keep markdown files up-to-date.
Home-page: https://github.com/alexandru-dinu/mdup
License: MIT
Author: Alexandru Dinu
Author-email: alex.dinu07@gmail.com
Requires-Python: >=3.8
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Description-Content-Type: text/markdown

# `mdup`

[![Build](https://github.com/alexandru-dinu/mdup/actions/workflows/main.yml/badge.svg)](https://github.com/alexandru-dinu/mdup/actions/workflows/main.yml)

Keep markdown files up-to-date by injecting code or script output between special blocks.

There are no external dependencies, i.e. apart from Python stdlib.

## Install

```
pip install mdup
```

## How does it work?

The blocks are defined using HTML comments.
Specifically, the **begin** block is of the form:

    <!-- MDUP:BEG ({CMD}:{CONTENTS}) -->

where `{CMD}` can be either:
- `SRC`: to just include the contents of `{CONTENTS}`
- `RUN`: to execute the script from `{CONTENTS}` and inject its stdout in the block

**NOTES**
- For `SRC` and `RUN` commands, the `{CONTENTS}` must be a path, relative to the md file.
- The blocks must be defined as the sole contents of the line, i.e. matching `^` and `$` anchors.

## Usage
<!-- MDUP:BEG (RUN:./scripts/help.sh) -->
```
usage: mdup [-h] -i INPUT [-o OUTPUT]

options:
  -h, --help            show this help message and exit
  -i INPUT, --input INPUT
                        Input file.
  -o OUTPUT, --output OUTPUT
                        Output file. If not specified, it will edit in place.
```
<!-- MDUP:END -->

Running `mdup -i <input.md> -o <output.md>` will replace the contents between each block
with the appropriate action as defined above. This means that you can keep files up-to-date by simply rerunning `mdup`.

Omitting the `-o` option will edit the file in-place.

For example, the cmdline usage block above is automatically generated by defining:

    <!-- MDUP:BEG (RUN:./scripts/help.sh) -->
    <!-- MDUP:END -->

then running `mdup -i README.md`.

[^1]: Inspired by [DavidWells/markdown-magic](https://github.com/DavidWells/markdown-magic).

