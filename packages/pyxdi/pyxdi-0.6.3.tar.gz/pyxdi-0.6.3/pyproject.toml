[tool.poetry]
name = "pyxdi"
version = "0.6.3"
description = "Dependency Injection library"
authors = ["Anton Ruhlov <antonruhlov@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/antonrh/pyxdi"
keywords = ["dependency injection", "dependencies", "di", "async", "asyncio", "application"]
packages = [
    { include = "pyxdi", from = "." },
]

[tool.poetry.dependencies]
python = ">=3.7,<3.12"
anyio = "^3.6.2"
mkdocs = { version = "^1.4.2", optional = true }
mkdocs-material = { version = "^9.0.12", optional = true }

[tool.poetry.extras]
docs = ["mkdocs", "mkdocs-material"]

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
mypy = "^1.2.0"
ruff = "^0.0.263"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
fastapi = "^0.95.1"
httpx = "^0.24.0"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
strict = true

[tool.ruff]
line-length = 88
select = ["C", "E", "F", "W", "B", "TID252", "T20"]
ignore = ["B008", "B009", "B010"]
exclude = [
    ".git",
    "__pycache__",
    ".history"
]

[tool.ruff.isort]
combine-as-imports = true
forced-separate = ["tests"]

[tool.pytest.ini_options]
addopts = [
    "--strict-config",
    "--strict-markers",
]
xfail_strict = true
junit_family = "xunit2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
