import os

import pandas as pd

SEURAT_R_SCRIPT = os.path.join(os.path.dirname(__file__), 'seurat.R')

# check Seurat is installed
exit_code = os.system('Rscript -e "library(Seurat)"')
if exit_code != 0:
    raise RuntimeError(
        f'Error running Rscript -e "library(Seurat)" (exit code: {exit_code}). Please install Seurat'
    )


def seurat(
    input_path,
    output_path,
    min_features=150,
    min_cells=3,
    n_top_features=2000,
    n_jobs=1,
    batch_key='batch',
):
    """
    params:
    ---
    input_path: str
        dir containing `matrix.mtx`, `features.txt`, `metadata.txt`. can be generated by `anutils.scutils.data.h5ad2mtx`
    output_path: str
        dir to write `pcs.txt` and `meta.txt`
    
    returns:
    ---
    pcs: pd.DataFrame, shape (n_cells, n_pcs)
        integrated PCs, with index being cell names
    """
    if not os.path.exists(output_path):
        print(f'creating output dir: {output_path}')
        os.makedirs(output_path)
    #TODO: update Seurat to v4 to fix the future.seed issue and remove suppression of warnings
    # run seurat
    args = {
        '-i': input_path,
        '-o': output_path,
        '-mf': min_features,
        '-mc': min_cells,
        '-nt': n_top_features,
        '-nj': n_jobs,
        '--batch_key': batch_key,
    }
    cmd = f'Rscript {SEURAT_R_SCRIPT} {" ".join([f"{k} {v}" for k, v in args.items()])}'
    exit_code = os.system(cmd)
    if exit_code != 0:
        raise RuntimeError(f'Error running seurat: {cmd} (exit code: {exit_code}')

    # collect results into memory
    pcs = pd.read_csv(os.path.join(output_path, 'pcs.txt'), sep='\t', index_col=0)

    return pcs
