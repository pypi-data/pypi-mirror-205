{   
    "merge":{
        "operations":{
            "GetSearchMetadata":{
                "name":"GetSearchMetadata",
                "http":{
                    "method":"GET",
                    "requestUri":"{Bucket}/?searchmetadata",
                    "responseCode":200
                },
                "input":{"shape":"GetSearchMetadataRequest"},
                "output":{"shape":"GetSearchMetadataOutput"},
                
                "documentation":"<p>Returns the list of specific metadata keys that are searchable on the specified bucket, if enabled. These are the keys that can be used in query expressions for this bucket that will filter the object listings.</p><p>For more information, see <a href=\"http://doc.isilon.com/ECS/3.6/API/S3MetadataKeyListOperations_getBucketMetadataSearchKeys_6c39daa62da096cac70549d5b99674cb_ba672412ac371bb6cf4e69291344510e_detail.html\">Dell API Documentation.</a></p>"
            },
            "DisableMetadataSearch":{
                "name":"DisableMetadataSearch",
                "http":{
                    "method":"DELETE",
                    "requestUri":"/{Bucket}?searchmetadata",
                    "responseCode":204
                },
                "input":{"shape":"DisableMetadataSearchRequest"},
                "documentationUrl":"http://doc.isilon.com/ECS/3.6/API/S3MetadataKeyListOperations_disableMetadataSearch_7dbe35c15fbfcbc751fb549154e2319f_ba672412ac371bb6cf4e69291344510e_detail.html",
                "documentation":"<p>Disables the list of bucket specific metadata keys that were previously assigned to a bucket.</p><p>For more information, see <a href=\"http://doc.isilon.com/ECS/3.6/API/S3MetadataKeyListOperations_disableMetadataSearch_7dbe35c15fbfcbc751fb549154e2319f_ba672412ac371bb6cf4e69291344510e_detail.html\">Dell API Documentation.</a></p>"
            },
        
            "MetadataSearch":{
                "name":"MetadataSearch",
                "http":{
                    "method":"GET",
                    "requestUri":"/{Bucket}/?query={expression}",
                    "responseCode":200
                },
                "input":{"shape":"QueryRequest"},
                "output":{"shape":"QueryResponse"},
                "documentationUrl":"",
                "documentation":"<p>Executes a bucket search and returns list of objects, and their system and user metadata values, that match the selection conditions in the search query expression.</p><p>For more information, see <a href=\"http://doc.isilon.com/ECS/3.6/API/S3MetadataSearchOperation_getObjectsList_f8907356ba2c22b312b538e2a72efeb5_ba672412ac371bb6cf4e69291344510e_detail.html\">Dell API Documentation.</a></p>"
              },

            "GetSystemMetadata":{
                "name":"GetSystemMetadata",
                "http":{
                    "method":"GET",
                    "requestUri":"?searchmetadata",
                    "responseCode":200
                },
                "output":{"shape":"GetSystemMetadataSearchOutput"},
                "documentationUrl":"http://doc.isilon.com/ECS/3.6/API/S3MetadataKeySystemListOperation_getSystemMetadataSearchKeys_7ba1e5f7a43a947638866ea460e03c53_ba672412ac371bb6cf4e69291344510e_detail.html",
                "documentation":"<p>Returns the list of system metadata keys that are available for assigning to a bucket. After assignment these can be used for filtering lists of objects based on search metadata queries.</p><p>For more information, see <a href=\"http://doc.isilon.com/ECS/3.6/API/S3MetadataKeySystemListOperation_getSystemMetadataSearchKeys_7ba1e5f7a43a947638866ea460e03c53_ba672412ac371bb6cf4e69291344510e_detail.html\">Dell API Documentation.</a></p>"
            }
        },
        "shapes":{
            "CreateBucketRequest":{
                "members":{
                    "SearchMetaData":{
                    "shape":"SearchMetaData",
                    "documentation":"<p>Search metadata used for the ECS metadata search operation. For more information, see <a href=\"http://doc.isilon.com/ECS/3.6/API/S3BucketOperations_createBucket_3e75383a5992a6d15fb81e872e46e256_ba672412ac371bb6cf4e69291344510e_detail.html\">Dell API Documentation.</a></p>",
                    "location":"header",
                    "locationName":"x-emc-metadata-search"
                    }
                }
            },
            "SearchMetaData":{"type":"string"},
            "GetSearchMetadataRequest":{
                "type":"structure",
                "required":["Bucket"],
                "members":{
                  "Bucket":{
                    "shape":"BucketName",
                    "documentation":"<p>Specifies the S3 bucket whose search metadata is being requested.</p>",
                    "contextParam":{"name":"Bucket"},
                    "location":"uri",
                    "locationName":"Bucket"
                  }
                }
            },
            "GetSearchMetadataOutput":{
                "type":"structure",
                "members":{
                    "MetadataSearchEnabled":{
                        "shape":"MetadataSearchEnabled",
                        "documentation":"<p>Boolean identifying if search metadata is enabled.</p>"
                    },
                    "IndexableKeys":{
                        "shape":"IndexableKeys",
                        "documentation":"<p>List of searchable metadata keys for the bucket.</p>"

                    },
                    "OptionalAttributes":{
                        "shape":"OptionalAttributes"
                    }
                }
            },
            "MetadataSearchEnabled":{"type":"boolean"},
            "GetSystemMetadataSearchOutput":{
                "type":"structure",
                "members":{
                    "IndexableKeys":{
                        "shape":"IndexableKeys",
                        "documentation":"<p>List of searchable metadata keys for the bucket.</p>"
                    },
                    "OptionalAttributes":{
                        "shape":"OptionalAttributes"
                    }
                }
            },
            "IndexableKeys":{
                "type":"list",
                "member":{
                    "shape":"Key"
                }
            },
            "Key":{
                "type":"structure",
                "members":{
                    "Name":{
                        "shape":"Name",
                        "documentation":"<p>Name of the metadata key.</p>"
                    },
                    "Datatype":{
                        "shape":"Datatype",
                        "documentation":"<p>Data type of the key.</p>"
                    }
                }
            },
            "Name":{"type":"string"},
            "Datatype":{"type":"string"},
            "OptionalAttributes":{
                "type":"list",
                "member":{
                    "shape":"Attribute"
                }
            },
            "Attribute":{
                "type":"structure",
                "members":{
                    "Name":{
                        "shape":"AttributeName",
                        "documentation":"<p>Name of the metadata key.</p>"
                    },
                    "Datatype":{
                        "shape":"AttributeDatatype",
                        "documentation":"<p>Data type of the key.</p>"
                    }
                }
            },
            "AttributeName":{"type":"string"},
            "AttributeDatatype":{"type":"string"},

            "DisableMetadataSearchRequest":{
                "type":"structure",
                "required":["Bucket"],
                "members":{
                "Bucket":{
                    "shape":"BucketName",
                    "contextParam":{"name":"Bucket"},
                    "documentation":"<p>Specifies the S3 bucket whose search metadata is being disabled.</p>",
                    "location":"uri",
                    "locationName":"Bucket"
                    }
                }
            },

            "QueryRequest":{
              "type":"structure",
              "required":["Bucket","Query"],
              "members":{
                "Bucket":{
                  "shape":"BucketName",
                  "documentation":"<p>Specifies the S3 bucket whose search metadata is being queried.</p>",
                  "location":"uri",
                  "locationName":"Bucket"
                },
                "Query":{
                  "shape":"Query",
                  "documentation":"<p> (required) is an expression takes the form:[(]{<em>condition</em>1}[%20[and/or]%20{<em>condition</em>2}][)][%20[and/or]%20...]</p><p>where:</p><ul><li><em>condition </em> is a metadata keyname filter in the form: <em>{selector} {operator} {argument}</em>, for example 'LastModified&gt;2015-01-01T00:00:00Z'</li><p></p><p>in which:</p><ul><li><em>selector </em> is a searchable keyname associated with the bucket</li><li><em>operator </em> is one of: ==, &gt;, &lt;, &gt;=, &lt;=</li><li><em>argument </em> is a value against which the selector is tested. The form of the argument must match the datatype of the key being indexed, which is one of: string, integer, datetime, decimal</li></ul></ul>",
                  "location":"uri",
                  "locationName":"expression"
                },
                "Attributes":{
                  "shape":"Attributes",
                  "documentation":"<p> (optional) is a list one or more metadata names that are not being indexed, but which can be listed in the query results. For example: '&amp;attributes=ContentType,Retention'</p>",
                  "location":"querystring",
                  "locationName":"attributes"
                },
                "Sorted":{
                  "shape":"Sorted",
                  "documentation":"<p> (optional) is the name of one key that appears in the query expression that becomes the sort key for the query results. If this optional parameter is absent, the sort order is the first keyname that appears in the expression.</p>",
                  "location":"querystring",
                  "locationName":"sorted"
                },
                "IncludeOlderVersion":{
                  "shape":"IncludeOlderVersions",
                  "documentation":"<p> (optional) is a boolean that when set to <em>true </em> causes both current and non-current versions of the keys to be listed, and when set to <em>false </em>causes only the current versions of keys to be listed. The default is <em>false</em>.</p>",
                  "location":"querystring",
                  "locationName":"include_older_version"
                },
                "MaxKeys":{
                  "shape":"MaxKeys",
                  "documentation":"<p> (optional) specifies the number of keys returned in the response body. Allows you to return fewer keys that the default.</p>",
                  "location":"querystring",
                  "locationName":"max-keys"
                },
                "Marker":{
                  "shape":"Marker",
                  "documentation":"<p> (optional) specifies the key to start with which will be the one after the marker.  When no more pages exist, a marker will not be returned and <nextmarker>NO MORE PAGES </nextmarker> will be returned.</p>",
                  "location":"querystring",
                  "locationName":"marker"
                }
              }
            },
            "Query":{"type":"string"},
            "Attributes":{"type":"string"},
            "Sorted":{"type":"string"},
            "IncludeOlderVersions":{"type":"boolean"},
            "MaxKeys":{"type":"integer"},
            "Marker":{"type":"string"},
            
            "QueryResponse":{
              "type":"structure",
              "members":{
                "Name":{
                  "shape":"BucketName",
                  "documentation":"<p>Name of the bucket.</p>"
                },
                "NextMarker":{
                  "shape":"NextMarker",
                  "documentation":"<p>Marker to request the next page of results.</p>"
                },
                "IsTruncated":{
                  "shape":"IsTruncated",
                  "documentation":"<p>Indicates whether all the objects matching query were returned (if true more results remain and another query is necessary).</p>"
                },
                "MaxKeys":{
                  "shape":"MaxKeys",
                  "documentation":"<p>The maximum number of keys that will be returned in the response.</p>"
                },
                "ObjectMatches":{
                  "shape":"ObjectMatches",
                  "documentation":"<p>List of objects that match the query.</p>"
                },
                "CommonPrefixMatches":{
                  "shape":"CommonPrefixMatches",
                  "documentation":"<p>List container of PrefixGroups.</p>"
                }
              }
            },
            "NextMarker":{"type":"string"},
            "ObjectMatches":{
              "type":"list",
              "member":{
                "shape":"object"
              }
            },
            "object":{
              "type":"structure",
              "members":{
                "objectName":{"shape":"objectName"},
                "objectId":{"shape":"objectId"},
                "versionId":{"shape":"versionId"},
                "queryMds":{"shape":"queryMds"},
                "queryBinaryMds":{"shape":"queryBinaryMds"},
                "indexKey":{"shape":"indexKey"},
                "isFanoutObject":{"shape":"isFanoutObject"}
              }
            },
            "objectName":{"type":"string"},
            "objectId":{"type":"string"},
            "versionId":{"type":"string"},
            "objectOwnerZone":{"type":"string"},
            "queryMds":{
              "type":"structure",
              "members":{
                "type":{"shape":"MDtype"},
                "mdMap":{"shape":"Metadata"}
              }
            },
            "MDtype":{"type":"string"},
            "queryBinaryMds":{
              "type":"structure",
              "members":{
                "left":{"shape":"left"},
                "right":{"shape":"right"}
              }
            },
            "left":{"type":"string"},
            "right":{"type":"string"},
            "indexKey":{"type":"string"},
            "isFanoutObject":{"type":"boolean"},
            "CommonPrefixMatches":{
              "type":"structure",
              "members":{
                "PrefixGroups":{
                    "shape":"PrefixGroups",
                    "documentation":"<p>A substring that starts at the beginning of the objectName and ends at the first occurrence of the specified delimiter after the prefix.</p>"
                }
              }
            },
            "PrefixGroups":{"type":"string"}
        }
    }
}